import { Box } from 'theme-ui'
import { format } from 'd3-format'
import { timeFormat, timeParse } from 'd3-time-format'

import {
  Chart,
  Ticks,
  TickLabels,
  Axis,
  AxisLabel,
  Bar,
  Plot,
  Line,
  Label,
  Grid,
} from '@carbonplan/charts'

// data from https://github.com/carbonplan/toucan-crypto-offsets/tree/main/data

const data = {
  BCT: {
    '2021-10-19': null,
    '2021-10-20': null,
    '2021-10-21': 5.1153214418,
    '2021-10-22': 5.6715751075,
    '2021-10-23': 5.5703188557,
    '2021-10-24': 5.7099910526,
    '2021-10-25': 6.5949470261,
    '2021-10-26': 6.0667080932,
    '2021-10-27': 6.2499434082,
    '2021-10-28': 5.6666030041,
    '2021-10-29': 4.8135306552,
    '2021-10-30': 5.22572016,
    '2021-10-31': 4.8353155568,
    '2021-11-01': 5.2924634808,
    '2021-11-02': 5.4081210505,
    '2021-11-03': 6.3790631687,
    '2021-11-04': 6.3305635782,
    '2021-11-05': 6.1990775351,
    '2021-11-06': 6.0153259577,
    '2021-11-07': 6.4210551112,
    '2021-11-08': 6.4564654995,
    '2021-11-09': 6.4585656018,
    '2021-11-10': 6.4344724624,
    '2021-11-11': 6.2760973823,
    '2021-11-12': 6.2433850926,
    '2021-11-13': 6.4067007056,
    '2021-11-14': 6.4579613342,
    '2021-11-15': 6.3105344376,
    '2021-11-16': 6.0523338455,
    '2021-11-17': 6.1222768517,
    '2021-11-18': 6.2297520651,
    '2021-11-19': 6.9173929227,
    '2021-11-20': 7.3546192086,
    '2021-11-21': 7.1923004683,
    '2021-11-22': 7.3947397109,
    '2021-11-23': 7.548594069,
    '2021-11-24': 7.5180421348,
    '2021-11-25': 7.7618666035,
    '2021-11-26': 7.7128289292,
    '2021-11-27': 8.0327312594,
    '2021-11-28': 7.7884343593,
    '2021-11-29': 8.1704068877,
    '2021-11-30': 7.3358734622,
    '2021-12-01': 7.1090903191,
    '2021-12-02': 6.5726637647,
    '2021-12-03': 6.1811419604,
    '2021-12-04': 6.6294427533,
    '2021-12-05': 6.8343604385,
    '2021-12-06': 6.4536820578,
    '2021-12-07': 6.3151457134,
    '2021-12-08': 6.2830364586,
    '2021-12-09': 5.4853644272,
    '2021-12-10': 5.2040271148,
    '2021-12-11': 5.5371824453,
    '2021-12-12': 6.2850367032,
    '2021-12-13': 5.6318398771,
    '2021-12-14': 5.6082776193,
    '2021-12-15': 5.3748110988,
    '2021-12-16': 5.4844236621,
    '2021-12-17': 5.087198171,
    '2021-12-18': 5.1199635551,
    '2021-12-19': 5.4234805583,
    '2021-12-20': 5.2166218401,
    '2021-12-21': 5.299810687,
    '2021-12-22': 5.9684721853,
    '2021-12-23': 6.3756866476,
    '2021-12-24': 6.6305552712,
    '2021-12-25': 6.8867199665,
    '2021-12-26': 7.3137338004,
    '2021-12-27': 6.7474534253,
    '2021-12-28': 7.0551317307,
    '2021-12-29': 7.0348221345,
    '2021-12-30': 7.3752712924,
    '2021-12-31': 7.0622629009,
    '2022-01-01': 6.8387851529,
    '2022-01-02': 6.0603732179,
    '2022-01-03': 6.6538853939,
    '2022-01-04': 6.478489461,
    '2022-01-05': 5.7671850298,
    '2022-01-06': 5.4627139324,
    '2022-01-07': 5.6234742569,
    '2022-01-08': 5.7005688897,
    '2022-01-09': 5.5648264867,
    '2022-01-10': 5.3139532792,
    '2022-01-11': 5.3069434444,
    '2022-01-12': 6.1703243262,
    '2022-01-13': 5.8921608311,
    '2022-01-14': 5.8451742335,
    '2022-01-15': 5.9117580554,
    '2022-01-16': 5.6579848354,
    '2022-01-17': 5.2401994899,
    '2022-01-18': 5.0787711964,
    '2022-01-19': 5.257445952,
    '2022-01-20': 5.3394417301,
    '2022-01-21': 5.030795187,
    '2022-01-22': 4.6280932023,
    '2022-01-23': 5.0020637495,
    '2022-01-24': 5.2336355457,
    '2022-01-25': 5.2451423172,
    '2022-01-26': 5.2254460246,
    '2022-01-27': 4.9845584914,
    '2022-01-28': 5.3472372124,
    '2022-01-29': 5.9389160946,
    '2022-01-30': 5.447329822,
    '2022-01-31': 5.0984902877,
    '2022-02-01': 5.1493443988,
    '2022-02-02': 4.9578258168,
    '2022-02-03': 5.0789834768,
    '2022-02-04': 4.9584688628,
    '2022-02-05': 5.1177629639,
    '2022-02-06': 4.9137370175,
    '2022-02-07': 4.961811801,
    '2022-02-08': 4.8454181409,
    '2022-02-09': 4.8916540271,
    '2022-02-10': 4.4767629199,
    '2022-02-11': 4.3514541574,
    '2022-02-12': 4.350254902,
    '2022-02-13': 4.0557894362,
    '2022-02-14': 4.1272175242,
    '2022-02-15': 4.2028058646,
    '2022-02-16': 4.3825944366,
    '2022-02-17': 4.5332637584,
    '2022-02-18': 4.3181238041,
    '2022-02-19': 4.2674896805,
    '2022-02-20': 4.1802285032,
    '2022-02-21': 4.0060436073,
    '2022-02-22': 4.07899572,
    '2022-02-23': 3.9641589939,
    '2022-02-24': 3.7746497334,
    '2022-02-25': 3.8852481751,
    '2022-02-26': 3.8645160436,
    '2022-02-27': 3.8358917762,
    '2022-02-28': 3.8493938626,
    '2022-03-01': 3.8334291019,
    '2022-03-02': 3.6203513576,
    '2022-03-03': 3.4842636127,
    '2022-03-04': 3.3328153589,
    '2022-03-05': 3.0633278148,
    '2022-03-06': 3.0243577252,
    '2022-03-07': 2.8709624642,
    '2022-03-08': 2.8227397968,
    '2022-03-09': 2.7249655581,
    '2022-03-10': 2.7108437138,
    '2022-03-11': 2.7104831209,
    '2022-03-12': 2.7088824688,
    '2022-03-13': 2.8049240559,
    '2022-03-14': 2.7937364558,
    '2022-03-15': 2.9226966004,
    '2022-03-16': 3.1581526814,
    '2022-03-17': 3.1161491299,
    '2022-03-18': 2.8963272397,
    '2022-03-19': 2.9160619647,
    '2022-03-20': 2.944157035,
    '2022-03-21': 3.0464024259,
    '2022-03-22': 2.9187914948,
    '2022-03-23': 2.947047672,
    '2022-03-24': 3.0471591969,
    '2022-03-25': 3.1489943195,
    '2022-03-26': 3.2311606733,
    '2022-03-27': 3.3421047184,
    '2022-03-28': 3.3617611469,
    '2022-03-29': 3.2343788694,
    '2022-03-30': 3.2594864162,
  },
  KLIMA: {
    '2021-10-19': 1976.743835781,
    '2021-10-20': 2231.6477174604,
    '2021-10-21': 2380.6316595914,
    '2021-10-22': 3290.1310877557,
    '2021-10-23': 3284.6265364015,
    '2021-10-24': 3091.2855975699,
    '2021-10-25': 3683.5712050412,
    '2021-10-26': 3432.553499126,
    '2021-10-27': 3314.0901453997,
    '2021-10-28': 2946.7448964923,
    '2021-10-29': 1955.9913357917,
    '2021-10-30': 2056.9569735562,
    '2021-10-31': 1685.7904710051,
    '2021-11-01': 1882.7301257756,
    '2021-11-02': 2026.2074110928,
    '2021-11-03': 2502.9821345266,
    '2021-11-04': 2317.5807943163,
    '2021-11-05': 2284.6332141447,
    '2021-11-06': 2059.733109494,
    '2021-11-07': 2175.8700673748,
    '2021-11-08': 2085.6417184455,
    '2021-11-09': 1955.6739714301,
    '2021-11-10': 1873.6696238221,
    '2021-11-11': 1679.6554697354,
    '2021-11-12': 1613.2177808251,
    '2021-11-13': 1590.7863279323,
    '2021-11-14': 1573.3905984635,
    '2021-11-15': 1422.4960783783,
    '2021-11-16': 1223.8723213601,
    '2021-11-17': 1220.8211714336,
    '2021-11-18': 1210.6138153886,
    '2021-11-19': 1526.65536923,
    '2021-11-20': 1621.2569889886,
    '2021-11-21': 1502.7687268126,
    '2021-11-22': 1456.4111492692,
    '2021-11-23': 1470.0526683955,
    '2021-11-24': 1476.4424734587,
    '2021-11-25': 1456.61976713,
    '2021-11-26': 1310.9155823,
    '2021-11-27': 1338.1197530538,
    '2021-11-28': 1198.1752971412,
    '2021-11-29': 1228.8829824622,
    '2021-11-30': 984.8893465165,
    '2021-12-01': 894.1792759562,
    '2021-12-02': 766.9204726382,
    '2021-12-03': 642.5711136475,
    '2021-12-04': 697.1011075427,
    '2021-12-05': 694.0644425208,
    '2021-12-06': 625.2657314228,
    '2021-12-07': 597.3757503155,
    '2021-12-08': 566.6979695099,
    '2021-12-09': 439.4360430498,
    '2021-12-10': 378.6180503512,
    '2021-12-11': 422.9253343913,
    '2021-12-12': 520.8505052754,
    '2021-12-13': 441.2568141946,
    '2021-12-14': 414.6915715288,
    '2021-12-15': 375.3340337639,
    '2021-12-16': 376.638816973,
    '2021-12-17': 311.8806699603,
    '2021-12-18': 299.2336390148,
    '2021-12-19': 311.751280075,
    '2021-12-20': 275.3908517945,
    '2021-12-21': 281.8332167466,
    '2021-12-22': 308.4282623667,
    '2021-12-23': 327.6166757388,
    '2021-12-24': 339.4208815473,
    '2021-12-25': 347.56376296,
    '2021-12-26': 362.4364421837,
    '2021-12-27': 334.7234514585,
    '2021-12-28': 344.3098311291,
    '2021-12-29': 336.042317263,
    '2021-12-30': 336.8339362984,
    '2021-12-31': 286.4657921802,
    '2022-01-01': 261.1489714778,
    '2022-01-02': 204.9221407004,
    '2022-01-03': 231.0034237662,
    '2022-01-04': 223.9769384735,
    '2022-01-05': 184.8116400346,
    '2022-01-06': 159.4789719483,
    '2022-01-07': 161.2124502292,
    '2022-01-08': 156.259205426,
    '2022-01-09': 137.7611101246,
    '2022-01-10': 122.8904267477,
    '2022-01-11': 123.4785434197,
    '2022-01-12': 149.8464650255,
    '2022-01-13': 145.2365678739,
    '2022-01-14': 141.2022571657,
    '2022-01-15': 139.0538958755,
    '2022-01-16': 126.8954139248,
    '2022-01-17': 101.28799316,
    '2022-01-18': 78.700151377,
    '2022-01-19': 82.1109595703,
    '2022-01-20': 81.1250490597,
    '2022-01-21': 68.172943901,
    '2022-01-22': 49.1809150357,
    '2022-01-23': 61.7660037011,
    '2022-01-24': 61.4435532493,
    '2022-01-25': 59.0601318843,
    '2022-01-26': 58.2721667266,
    '2022-01-27': 51.3791192005,
    '2022-01-28': 53.482634856,
    '2022-01-29': 60.8930051516,
    '2022-01-30': 56.1040022755,
    '2022-01-31': 50.8998706366,
    '2022-02-01': 50.428169812,
    '2022-02-02': 48.1236676264,
    '2022-02-03': 44.7119478342,
    '2022-02-04': 43.4797634797,
    '2022-02-05': 46.5552499125,
    '2022-02-06': 42.9927990759,
    '2022-02-07': 41.521987868,
    '2022-02-08': 36.8247960966,
    '2022-02-09': 35.2288708319,
    '2022-02-10': 30.8012973231,
    '2022-02-11': 28.6214879614,
    '2022-02-12': 28.0151344497,
    '2022-02-13': 24.6322537413,
    '2022-02-14': 25.3939190302,
    '2022-02-15': 27.2353004776,
    '2022-02-16': 31.2410538935,
    '2022-02-17': 33.5069823756,
    '2022-02-18': 31.0788641793,
    '2022-02-19': 30.2196960038,
    '2022-02-20': 28.5585038078,
    '2022-02-21': 24.6028714575,
    '2022-02-22': 26.2759272651,
    '2022-02-23': 23.7554768626,
    '2022-02-24': 19.4166958786,
    '2022-02-25': 21.8663671804,
    '2022-02-26': 21.2527781533,
    '2022-02-27': 20.4103570392,
    '2022-02-28': 20.8658369983,
    '2022-03-01': 20.0659238733,
    '2022-03-02': 18.3909512992,
    '2022-03-03': 15.7824071811,
    '2022-03-04': 13.6703749656,
    '2022-03-05': 13.9695395651,
    '2022-03-06': 12.9843280383,
    '2022-03-07': 11.2536525774,
    '2022-03-08': 11.2389651353,
    '2022-03-09': 11.0988822096,
    '2022-03-10': 10.8738485346,
    '2022-03-11': 10.8673544432,
    '2022-03-12': 10.8158179747,
    '2022-03-13': 11.8449756367,
    '2022-03-14': 12.1173099309,
    '2022-03-15': 14.034594397,
    '2022-03-16': 17.5671238545,
    '2022-03-17': 16.468872068,
    '2022-03-18': 15.2251210791,
    '2022-03-19': 15.3450173915,
    '2022-03-20': 15.5576581735,
    '2022-03-21': 17.152850457,
    '2022-03-22': 17.3684397833,
    '2022-03-23': 17.4040744229,
    '2022-03-24': 19.1419227229,
    '2022-03-25': 20.313426989,
    '2022-03-26': 21.5087884778,
    '2022-03-27': 23.9814300022,
    '2022-03-28': 24.0673085801,
    '2022-03-29': 20.9818975247,
    '2022-03-30': null,
  },
}

const timeSeries = {
  BCT: {
    keys: Object.keys(data.BCT),
    values: Object.keys(data.BCT).map((k, i) => [i, data.BCT[k]]),
  },
  KLIMA: {
    keys: Object.keys(data.KLIMA),
    values: Object.keys(data.KLIMA).map((k, i) => [i, data.KLIMA[k]]),
  },
}

const formatter = format('~s')

const timeParser = timeParse('%Y-%m-%d')
const timeFormatter = timeFormat('%m-%d-%y')

const ticks = [13, 43, 74, 105, 133]
const ticksMobile = [43, 105]

const Prices = () => {
  // const [timeSeries, setTimeSeries] = useState([])

  // useEffect(() => {
  //   fetch(
  //     'https://raw.githubusercontent.com/carbonplan/toucan-crypto-explainer/main/data/toucan_retirements_by_minimum_vintage.json?token=GHSAT0AAAAAABHMSV3JCUFKSGNL4TUKGKDGYSE22DQ'
  //   )
  //     .then((response) => response.json())
  //     .then((data) => {
  //       const timeSeries = {
  //         BCT: {
  //           keys: Object.keys(data.BCT),
  //           values: Object.keys(data.BCT).map((k, i) => [i, data.BCT[k]]),
  //         },
  //         KLIMA: {
  //           keys: Object.keys(data.KLIMA),
  //           values: Object.keys(data.KLIMA).map((k, i) => [i, data.KLIMA[k]]),
  //         },
  //       }
  //       setTimeSeries(timeSeries)
  //     })
  // }, [])

  return (
    <>
      <Box sx={{ width: '100%', height: ['175px', '200px', '200px', '200px'] }}>
        <Chart
          x={[0, timeSeries.BCT.values.length - 2]}
          y={[0, 10]}
          padding={{ left: 65 }}
        >
          <Ticks left />
          <Ticks
            values={ticks}
            bottom
            sx={{ display: ['none', 'inherit', 'inherit', 'inherit'] }}
          />
          <Ticks
            values={ticksMobile}
            bottom
            sx={{ display: ['inherit', 'none', 'none', 'none'] }}
          />
          <TickLabels left format={(d) => `$${d}`} />
          <Axis left bottom />
          <Label x={20} y={8.5} sx={{ color: 'grey' }}>
            BCT
          </Label>
          <Grid vertical values={ticks} />
          <Plot>
            <Line
              data={timeSeries.BCT.values.filter((d) => d[1])}
              color={'grey'}
              width={1.25}
            />
          </Plot>
        </Chart>
      </Box>
      <Box sx={{ width: '100%', height: ['175px', '200px', '200px', '200px'] }}>
        <Chart
          x={[0, timeSeries.BCT.values.length - 2]}
          y={[0, 4000]}
          padding={{ left: 65 }}
        >
          <Ticks left />
          <Ticks
            bottom
            values={ticks}
            sx={{ display: ['none', 'inherit', 'inherit', 'inherit'] }}
          />
          <Ticks
            bottom
            values={ticksMobile}
            sx={{ display: ['inherit', 'none', 'none', 'none'] }}
          />
          <TickLabels left format={(d) => `$${formatter(d)}`} />
          <TickLabels
            bottom
            values={ticks}
            sx={{ display: ['none', 'inherit', 'inherit', 'inherit'] }}
            format={(d) => timeFormatter(timeParser(timeSeries.KLIMA.keys[d]))}
          />
          <TickLabels
            bottom
            values={ticksMobile}
            sx={{ display: ['inherit', 'none', 'none', 'none'] }}
            format={(d) => timeFormatter(timeParser(timeSeries.KLIMA.keys[d]))}
          />
          <Axis left bottom />
          <AxisLabel left align='left'>
            Price
          </AxisLabel>
          <AxisLabel bottom>Time</AxisLabel>
          <Grid vertical values={ticks} />
          <Label x={20} y={2900} sx={{ color: 'grey' }}>
            KLIMA
          </Label>
          <Plot>
            <Line
              data={timeSeries.KLIMA.values.filter((d) => d[1])}
              color={'grey'}
              width={1.25}
            />
          </Plot>
        </Chart>
      </Box>
    </>
  )
}

export default Prices
